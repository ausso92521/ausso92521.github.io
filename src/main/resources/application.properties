server.error.whitelabel.enabled=false
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
# TLS HTTPS Setup
# Self Signed Certificate, should be updated from trusted CA in production
server.ssl.enabled=true
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:certs/keystore.p12
server.ssl.key-store-password=password
server.ssl.protocol=TLS
server.ssl.enabled-protocols=TLSv1.2
server.port=443

# Database Setting (In-Memory H2, mimics Postgresql DB
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=false
spring.datasource.url=jdbc:h2:mem:testdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1

# Disable servlet sending JSESSIONID cookie for stateless sessions
server.servlet.session.persistent=false

# Add DB_CLOSE_ON_EXIT=FALSE to the url above to make db persistent even after close
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Let tables generate before running data.sql
spring.jpa.defer-datasource-initialization=true

# Extensive Logging (Allows class level logging using Logger LOGGER = LoggerFactory.getLogger(ClassName.class);
debug=true
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.tech.leftii.animaltracker=debug
logging.level.org.hibernate.type=debug
logging.level.org.springframework.boot.autoconfigure=error
logging.level.org.hibernate.stat=debug
logging.level.org.springframework=debug
spring.mvc.log-request-details=true


rsa.public-key=classpath:certs/public.pem
rsa.private-key=classpath:certs/private.pem

springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger.html
springdoc.api-docs.path=/api-docs

